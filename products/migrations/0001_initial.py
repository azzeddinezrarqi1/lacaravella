# Generated by Django 5.2.4 on 2025-07-31 13:17

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Allergen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nom')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Icône')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
            ],
            options={
                'verbose_name': 'Allergène',
                'verbose_name_plural': 'Allergènes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/', verbose_name='Image')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Catégorie',
                'verbose_name_plural': 'Catégories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CustomizationOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('option_type', models.CharField(choices=[('topping', 'Topping'), ('sauce', 'Sauce'), ('size', 'Taille'), ('container', 'Contenant')], max_length=20, verbose_name="Type d'option")),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Prix')),
                ('image', models.ImageField(blank=True, null=True, upload_to='customizations/', verbose_name='Image')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('max_selections', models.PositiveIntegerField(default=1, verbose_name='Sélections maximum')),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
            ],
            options={
                'verbose_name': 'Option de personnalisation',
                'verbose_name_plural': 'Options de personnalisation',
                'ordering': ['option_type', 'order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Flavor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('color', models.CharField(default='#000000', max_length=7, verbose_name='Couleur')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
            ],
            options={
                'verbose_name': 'Parfum',
                'verbose_name_plural': 'Parfums',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('description', models.TextField(verbose_name='Description')),
                ('short_description', models.CharField(blank=True, max_length=255, verbose_name='Description courte')),
                ('product_type', models.CharField(choices=[('ice_cream', 'Crème glacée'), ('sorbet', 'Sorbet'), ('frozen_yogurt', 'Yaourt glacé'), ('gelato', 'Gelato')], default='ice_cream', max_length=20, verbose_name='Type de produit')),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Prix de base')),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Prix en promotion')),
                ('is_customizable', models.BooleanField(default=True, verbose_name='Personnalisable')),
                ('is_featured', models.BooleanField(default=False, verbose_name='En vedette')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('stock_quantity', models.PositiveIntegerField(default=0, verbose_name='Stock')),
                ('min_order_quantity', models.PositiveIntegerField(default=1, verbose_name='Quantité minimum')),
                ('max_order_quantity', models.PositiveIntegerField(default=50, verbose_name='Quantité maximum')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('allergens', models.ManyToManyField(blank=True, to='products.allergen', verbose_name='Allergènes')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='products.category', verbose_name='Catégorie')),
            ],
            options={
                'verbose_name': 'Produit',
                'verbose_name_plural': 'Produits',
                'ordering': ['-is_featured', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductFlavor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_modifier', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Modificateur de prix')),
                ('is_available', models.BooleanField(default=True, verbose_name='Disponible')),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('flavor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.flavor', verbose_name='Parfum')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='Produit')),
            ],
            options={
                'verbose_name': 'Parfum de produit',
                'verbose_name_plural': 'Parfums de produit',
                'ordering': ['order', 'flavor__name'],
                'unique_together': {('product', 'flavor')},
            },
        ),
        migrations.AddField(
            model_name='product',
            name='flavors',
            field=models.ManyToManyField(through='products.ProductFlavor', to='products.flavor', verbose_name='Parfums disponibles'),
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/', verbose_name='Image')),
                ('alt_text', models.CharField(blank=True, max_length=200, verbose_name='Texte alternatif')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Image principale')),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.product', verbose_name='Produit')),
            ],
            options={
                'verbose_name': 'Image de produit',
                'verbose_name_plural': 'Images de produit',
                'ordering': ['is_primary', 'order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('products', models.ManyToManyField(to='products.product', verbose_name='Produits')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Liste de souhaits',
                'verbose_name_plural': 'Listes de souhaits',
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Note')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('comment', models.TextField(verbose_name='Commentaire')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Approuvé')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='products.product', verbose_name='Produit')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Avis produit',
                'verbose_name_plural': 'Avis produits',
                'ordering': ['-created_at'],
                'unique_together': {('product', 'user')},
            },
        ),
    ]
